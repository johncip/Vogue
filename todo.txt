done:
[x] implement new approach
[x] process entire directory
[x] write usage
[x] parse/normalize css
[x] move css string output to parser
[x] specify css output file
[x] create css output file (check if exists)
[x] have parser to take in / output strings (for testing)

features:
[ ] exclude html files matching pattern
[ ] link css output file to html (use pyquery?)
[ ] move table styling to css
[ ] handle inline stylesheet
[ ] recursive html file search
[ ] generate tag#id instead of .class

correctness:
[ ] handle priority tokens properly
[ ] "fail" correctly on pseudo-stuff
[ ] ignore inline imports

tests:
[ ] use pytest
[ ] move html output string joining into parser